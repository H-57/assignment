<!DOCTYPE html>
<html lang="en">
<%- include('./partials/head') %>
<body>
    
    <%- include('./partials/navbar') %>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
<form >
    <div class="flex items-center justify-center w-full">
        <label for="dropzone-file" class="flex flex-col items-center justify-center w-full h-64 border-2 border-gray-300 border-dashed rounded-lg cursor-pointer bg-gray-50 dark:hover:bg-bray-800 dark:bg-gray-700 hover:bg-gray-100 dark:border-gray-600 dark:hover:border-gray-500 dark:hover:bg-gray-600">
            <div class="flex flex-col items-center justify-center pt-5 pb-6">
                <svg class="w-8 h-8 mb-4 text-gray-500 dark:text-gray-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 16">
                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 13h3a3 3 0 0 0 0-6h-.025A5.56 5.56 0 0 0 16 6.5 5.5 5.5 0 0 0 5.207 5.021C5.137 5.017 5.071 5 5 5a4 4 0 0 0 0 8h2.167M10 15V6m0 0L8 8m2-2 2 2"/>
                </svg>
                <p class="mb-2 text-sm text-gray-500 dark:text-gray-400"><span class="font-semibold">Click to upload</span> or drag and drop</p>
                <p class="text-xs text-gray-500 dark:text-gray-400">SVG, PNG, JPG or GIF (MAX. 800x400px)</p>
                
            </div>
            <input id="dropzone-file" name="user_image" type="file" class="hidden" />
            <button class="h-10 px-6 font-semibold rounded-md bg-black text-white" onclick="handelImage()">upload</button>
        </label>
    </div> 
    </form>
    <script>
      const handelImage=async()=>{
      try {
        const image=document.getElementById("dropzone-file").files[0]
        if(!image)return console.log("erroe ")
        const response=await fetch('/image',{
          method: 'POST',
            headers: {'Content-Type': 'multipart/form-data'},
            body: {image}
        })
        console.log(await(response.json()))
      } catch (error) {
        console.log("error")
      }
       
        
      }
    </script>
    <% if (locals.userData) { %>
        <form class=" m-auto">
            <div class="flex flex-wrap -mx-3 mb-6">
              <div class="w-full md:w-1/2 px-3 mb-6 md:mb-0">
                <label class="block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2" for="grid-first-name">
                Name
                </label>
               
               
                <input class="appearance-none block w-full bg-gray-200 text-gray-700 border border-grey-200 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white"id="name" type="text"value="<%= userData.user_name %>" placeholder="Jane">
              
              </div>
              <div class="w-full md:w-1/2 px-3">
                <label class="block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2" for="order">
                  order
                </label>
                <input class="appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500"  id="order"type="text" value="<%= userData.total_orders %>" placeholder="0">
              </div>
            </div>
            <div class="flex flex-wrap -mx-3 mb-6">
              <div class="w-full px-3">
                <label class="block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2" for="grid-password">
                  Password
                </label>
                <input class="appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white focus:border-gray-500"  id="password" type="text" value="<%= userData.user_password %>" placeholder="******************">
                
              </div>
            </div>
            <button class="h-10 px-6 font-semibold rounded-md bg-black text-white " id="submit">submit</button>
          </form>
    <% } %>
    
      <script>
         const submit = document.getElementById("submit");
      submit.addEventListener('click', async () => {
        event.preventDefault(); // Prevent the form from submitting
    
        const name = document.getElementById("name").value;
        const password = document.getElementById("password").value;
        const order = document.getElementById("order").value;
        try {
           // Make a POST request to the server
        const response = await fetch('/update', {
          method: 'PUT',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ user_name:name, user_password:password,total_orders:order })
        });
        
        const data = await response.json();
        console.log(data)
        
        // Display the response in an alert
        let color="linear-gradient(to right, #06ff06, green)"
      
        if(data.status=="error"){
          console.log("run")
          color ="linear-gradient(to right, #bf3131, tomato)"
        }
    Toastify({
      text: data.message,
      duration: 3000,
      // destination: "https://github.com/apvarun/toastify-js",
      // newWindow: true,
      close: true,
      gravity: "top", // `top` or `bottom`
      position: "center", // `left`, `center` or `right`
      stopOnFocus: true, // Prevents dismissing of toast on hover
      style: {
        background: color,
        
      },
      offset: {
        x: 50, // horizontal axis - can be a number or a string indicating unity. eg: '2em'
        y: 10 // vertical axis - can be a number or a string indicating unity. eg: '2em'
      },
      onClick: function(){} // Callback after click
    }).showToast();
    
    
        } catch (error) {
          console.log(error)
        }
       
      });
      </script>
</body>
</html>